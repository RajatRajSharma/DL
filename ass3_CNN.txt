import random
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import tensorflow as tf
from tensorflow.keras.models import Sequential        
from tensorflow.keras.layers import Conv2D,MaxPooling2D,Dense,Flatten,Input

X_train = np.loadtxt('input_test.csv',delimiter=',')
Y_train = np.loadtxt('labels_test.csv',delimiter=',')
X_test = np.loadtxt('input_test.csv',delimiter=',')
Y_test = np.loadtxt('labels_test.csv',delimiter=',')

X_train = X_train.reshape(len(X_train),100,100,3)
Y_train = Y_train.reshape(len(Y_train),1)
X_test = X_test.reshape(len(X_test),100,100,3)
Y_test = Y_test.reshape(len(Y_test),1)

X_train = X_train/255
X_test = X_test/255

print("Shape of the X_Train:",X_train.shape)
print("Shape of the Y_Train:",Y_train.shape)
print("Shape of the X_Test:",X_test.shape)
print("Shape of the Y_Test",Y_test.shape)
###################

idx = random.randint(0,len(X_train))
plt.imshow(X_train[idx,:])
plt.show()
###################

model = Sequential([
    Input(shape=(100, 100, 3)),  
    Conv2D(32, (3, 3), activation='relu'),
    MaxPooling2D((2, 2)),

    Conv2D(32, (3, 3), activation='relu'),
    MaxPooling2D((2, 2)),

    Flatten(),
    Dense(64, activation='relu'),
    Dense(1, activation='sigmoid')
])

model.compile(loss ='binary_crossentropy',optimizer='adam',metrics =['accuracy'])

model.fit(X_train,Y_train,epochs=15,batch_size=64)
####################

idx2 = random.randint(0,len(Y_test))
plt.imshow(X_test[idx2,:])
plt.show()

y_pred = model.predict(X_test[idx2,:].reshape(1,100,100,3))
y_pred = y_pred >0.5

if(y_pred == 0):
    pred = 'dog'
else:
    pred = 'cat'

print("Our model says it is a :",pred)